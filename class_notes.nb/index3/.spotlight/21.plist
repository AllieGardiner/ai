<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>keywords</key>
	<string></string>
	<key>txt</key>
	<string>Wednesday, January 14, 2009 Functions name parameters body Lambdas - special form name parameters body (lambda (arglist) body) original way to define functions defun:    (setf name (lambda (arglist) body) Applicative and Mapping Features of LISP apply (apply '+ '(6 7 3))  &gt;  16 first argument should evaluate to a function (apply #'userdefinedfunction '(arglist)) - use # sign for user defined functions apply:   (eval (cons funarg arglist)) funcall (funcall '+ 6 7 3) funcall:    (eval (cons funarg (list rest of args)) mapcar create a mapping between set of argument lists and set of results (mapcar '+ '(1 2 3) '(5 7 9))  &gt;  (6 9 12) (mapcar 'list '(1 2 3) '(5 7 9))  &gt;  ((1 5) (2 7) (3 9)) maplist (maplist 'list '(1 2 3) '(5 7 9))  &gt;  (((1 2 3) (5 7 9)) ((2 3) (7 9)) ((3) (9))) Non-Functional Style Features of Common LISP (aka SELLOUT FEATURES) let way to use local variables in functions temporary binding - only available inside the let function (let  (a b c) ...return value expression...) (let (a (b 2) (c 0)) ...return value expression...) - initial values progx define procedural program Iteration instructions dolist list driven loop (dolist (loopcontrol listofvaluesforcontrol returnvalue) expressions to evaluate....) dotimes like for loop (dotimes (sym N returnvalue) ...expressions to evaluate...) do also like for, exit when test-stop-when-true evaluates to T (do (sym initializationvalue incrementexpression) (test-stop-when-true) ...expressions to evaluate...) Homework State space search chapter or - good for depth-first search looking for "True, this is the right solution" function argument - this is the state I'm in, can you find a solution for this state? Water Jug Problem Operations fill 1 fill 2 empty 1 empty 2 pour 1 to 2 pour 2 to 1 Start state - empty jugs - 0 / 0 Goal state - one jug empty, the other with desired amount of water - 0 / 4 States visited list - have I tried this state before? Keep a list of the path I took Base case - is the state I'm in the Goal state? - return list of path I took Move generator function - this is the last thing I tried, what should be the next thing I try? </string>
</dict>
</plist>
